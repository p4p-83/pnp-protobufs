syntax = "proto3";

package pnp.v1;

message Message {
  Tags tag = 1;
  oneof payload {
    Deltas deltas = 2;
    Positions positions = 3;
    Step step = 4;
    Calibration calibration = 5;
    HeadOperation headOperation = 6;
    MachineState machineState = 7;
  }

  enum Tags {
    INVALID = 0;
    /* A heartbeat message to keep the socket alive. */
    HEARTBEAT = 1;
    /* A target count of deltas to move the gantry. */
    TARGET_DELTAS = 2;
    /* A count of actual deltas moved by the gantry. */
    MOVED_DELTAS = 3;
    /* An array of identified target positions to draw on the interface. */
    TARGET_POSITIONS = 4;
    /* A direction in which to step the gantry. */
    STEP_GANTRY = 5;
    /* An error count of deltas to calibrate out. */
    CALIBRATE_DELTAS = 6;
    /* An operation to perform with the head mechanism. */
    OPERATE_HEAD = 7;
    /* A message to communicate the machine's state to the frontend. */
    MACHINE_STATE = 8;
  }

  message Deltas {
    sint32 x = 1;
    sint32 y = 2;
  }

  message Position {
    int32 x = 1;
    int32 y = 2;
  }

  message Positions { repeated Position offsets = 1; }

  message Step {
    Direction direction = 1;

    enum Direction {
      INVALID = 0;
      ZERO = 1;
    }
  }

  message Calibration {
    Deltas target = 1;
    Deltas real = 2;
  }

  message HeadOperation {
    Operation operation = 1;

    enum Operation {
      PICK = 0;
      PLACE = 1;
      ENGAGE_VACUUM = 2;
      DISENGAGE_VACUUM = 3;
    }
  }

  message MachineState {
    Position gantryPosition = 1;
    bool isHeadDown = 2;
    bool isVacuumEngaged = 3;
  }
}
